{"version":3,"sources":["../../lib/utils/props.mjs"],"names":["viewportPrefixablePropType","baseType","PropTypes","oneOfType","shape","mobile","tablet","desktop","widescreen","fullhd","tabletOnly","desktopOnly","widescreenOnly","touch","breakpointPropType","oneOf","Object","keys","breakpointList","classNamePropType","string","arrayOf","modifiersPropsList","color","colorList","size","sizeList","outlined","bool","loading","pulledLeft","pulledRight","marginLess","paddingLess","overlay","clipped","radiusless","shadowless","unselectable","invisible","srOnly","responsiveProps","colorOverrideProps","fullColorList","textSizeProps","textAlignProps","alignmentList","textTransformPropsList","capitalization","capitalizationList","italic","textWeight","textWeightList","allModifiersPropList","textColor","backgroundColor","responsive","textAlign","textSize"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\n\nimport {\n  colorList,\n  fullColorList,\n  sizeList,\n  alignmentList,\n  capitalizationList,\n  textWeightList,\n  breakpointList,\n} from \"./const\";\n\n/** Create a proptypes for a property that can be prefixed with breakpoints */\nexport const viewportPrefixablePropType = baseType => PropTypes.oneOfType([\n  baseType,\n  PropTypes.shape({\n    mobile: baseType,\n    tablet: baseType,\n    desktop: baseType,\n    widescreen: baseType,\n    fullhd: baseType,\n    tabletOnly: baseType,\n    desktopOnly: baseType,\n    widescreenOnly: baseType,\n    touch: baseType,\n  }),\n]);\n\n/** PropTypes for breakpoints */\nexport const breakpointPropType = PropTypes.oneOf(Object.keys(breakpointList));\n\n/** PropTypes for className */\nexport const classNamePropType = PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.arrayOf(PropTypes.string),\n]);\n\n/** List of PropTypes for common modifiers */\nexport const modifiersPropsList = {\n  color: PropTypes.oneOf(colorList),\n  size: PropTypes.oneOf(sizeList),\n  outlined: PropTypes.bool,\n  loading: PropTypes.bool,\n  pulledLeft: PropTypes.bool,\n  pulledRight: PropTypes.bool,\n  marginLess: PropTypes.bool,\n  paddingLess: PropTypes.bool,\n  overlay: PropTypes.bool,\n  clipped: PropTypes.bool,\n  radiusless: PropTypes.bool,\n  shadowless: PropTypes.bool,\n  unselectable: PropTypes.bool,\n  invisible: PropTypes.bool,\n  srOnly: PropTypes.bool,\n};\n\n/** PropTypes for responsive modifiers */\nexport const responsiveProps = PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.arrayOf(PropTypes.string),\n]);\n\n/** PropTypes for text/background color modifiers */\nexport const colorOverrideProps = PropTypes.oneOf(fullColorList);\n\n/** PropTypes for text size modifier */\nexport const textSizeProps = PropTypes.oneOf([1, 2, 3, 4, 5, 6, 7]);\n\n/** PropTypes for text alignment modifiers */\nexport const textAlignProps = PropTypes.oneOf(alignmentList);\n\n/** List of proptypes for text transformation */\nexport const textTransformPropsList = {\n  capitalization: PropTypes.oneOf(capitalizationList),\n  italic: PropTypes.bool,\n  textWeight: PropTypes.oneOf(textWeightList),\n};\n\n/** Shortcut with all common modifiers proptypes */\nexport const allModifiersPropList = {\n  textColor: colorOverrideProps,\n  backgroundColor: colorOverrideProps,\n  ...modifiersPropsList,\n  responsive: responsiveProps,\n  textAlign: textAlignProps,\n  textSize: textSizeProps,\n  ...textTransformPropsList,\n};"],"file":"props.js"}