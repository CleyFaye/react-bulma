{"version":3,"sources":["../../lib/layout/hero.mjs"],"names":["Hero","React","Component","render","classes","props","fullheight","size","undefined","push","gradient","headElement","head","footElement","foot","className","contentClassName","children","propTypes","classNamePropType","allModifiersPropList","PropTypes","bool","node"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAGA;;AAGA;;;;AAKA;;;;;;;;;;;;AAYe,MAAMA,IAAN,SAAmBC,eAAMC,SAAzB,CAAmC;AAChDC,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG,CAAC,MAAD,CAAhB;;AACA,QAAI,KAAKC,KAAL,CAAWC,UAAf,EAA2B;AACzB,WAAKD,KAAL,CAAWE,IAAX,GAAkBC,SAAlB;AACAJ,MAAAA,OAAO,CAACK,IAAR,CAAa,eAAb;AACD;;AACD,QAAI,KAAKJ,KAAL,CAAWK,QAAf,EAAyB;AACvBN,MAAAA,OAAO,CAACK,IAAR,CAAa,SAAb;AACD;;AACD,4BAASL,OAAT,EAAkB,KAAKC,KAAvB;AACA,QAAIM,WAAW,GAAG,KAAKN,KAAL,CAAWO,IAAX,GACd;AAAK,MAAA,SAAS,EAAC;AAAf,OACC,KAAKP,KAAL,CAAWO,IADZ,CADc,GAIdJ,SAJJ;AAKA,QAAIK,WAAW,GAAG,KAAKR,KAAL,CAAWS,IAAX,GACd;AAAK,MAAA,SAAS,EAAC;AAAf,OACC,KAAKT,KAAL,CAAWS,IADZ,CADc,GAIdN,SAJJ;AAKA,WAAO;AAAS,MAAA,SAAS,EAAE,wBAAYJ,OAAZ,EAAqB,KAAKC,KAAL,CAAWU,SAAhC;AAApB,OACJJ,WADI,EAEL;AAAK,MAAA,SAAS,EAAE,wBAAY,CAAC,WAAD,CAAZ,EAA2B,KAAKN,KAAL,CAAWW,gBAAtC;AAAhB,OACG,KAAKX,KAAL,CAAWY,QADd,CAFK,EAKJJ,WALI,CAAP;AAOD;;AA5B+C;;;AA8BlDb,IAAI,CAACkB,SAAL,GAAiB;AACfH,EAAAA,SAAS,EAAEI,wBADI;AAEfH,EAAAA,gBAAgB,EAAEG,wBAFH;AAGf,KAAGC,2BAHY;AAIfV,EAAAA,QAAQ,EAAEW,mBAAUC,IAJL;AAKfhB,EAAAA,UAAU,EAAEe,mBAAUC,IALP;AAMfL,EAAAA,QAAQ,EAAEI,mBAAUE,IANL;AAOfX,EAAAA,IAAI,EAAES,mBAAUE,IAPD;AAQfT,EAAAA,IAAI,EAAEO,mBAAUE;AARD,CAAjB","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  classString,\n} from \"../utils/class\";\nimport {\n  bringAll,\n} from \"../utils/modifier\";\nimport {\n  allModifiersPropList,\n  classNamePropType,\n} from \"../utils/props\";\n\n/**\n * Props:\n * - className: applied to the hero outer body\n * - contentClassName: applied to the hero content\n * - color\n * - size\n * - gradient: true if a light gradient should be used\n * - fullheight: true if the hero is full height (override size)\n * - head: node that should stick to the top of the Hero\n * - foot: node that should stick to the bottom of the Hero\n * - All Bulma modifiers\n */\nexport default class Hero extends React.Component {\n  render() {\n    const classes = [\"hero\"];\n    if (this.props.fullheight) {\n      this.props.size = undefined;\n      classes.push(\"is-fullheight\");\n    }\n    if (this.props.gradient) {\n      classes.push(\"is-bold\");\n    }\n    bringAll(classes, this.props);\n    let headElement = this.props.head\n      ? <div className=\"hero-head\">\n        {this.props.head}\n      </div>\n      : undefined;\n    let footElement = this.props.foot\n      ? <div className=\"hero-foot\">\n        {this.props.foot}\n      </div>\n      : undefined;\n    return <section className={classString(classes, this.props.className)}>\n      {headElement}\n      <div className={classString([\"hero-body\"], this.props.contentClassName)}>\n        {this.props.children}\n      </div>\n      {footElement}\n    </section>;\n  }\n}\nHero.propTypes = {\n  className: classNamePropType,\n  contentClassName: classNamePropType,\n  ...allModifiersPropList,\n  gradient: PropTypes.bool,\n  fullheight: PropTypes.bool,\n  children: PropTypes.node,\n  head: PropTypes.node,\n  foot: PropTypes.node,\n};"],"file":"hero.js"}