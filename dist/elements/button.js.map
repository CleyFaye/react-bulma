{"version":3,"sources":["../../lib/elements/button.mjs"],"names":["Button","React","Component","constructor","props","render","buttonClasses","rounded","push","onClick","join","label","propTypes","PropTypes","string","color","size","fullwidth","bool","inverted","loading","func","ButtonList","buttonsClasses","joined","align","children","oneOfType","arrayOf","node"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;AAEA;;AAEA;;;;;;;;;;;AAWO,MAAMA,MAAN,SAAqBC,eAAMC,SAA3B,CAAqC;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,aAAa,GAAG,CAAC,QAAD,CAAtB;AACA,gCAAgB,KAAKF,KAArB,EAA4BE,aAA5B;;AACA,QAAI,KAAKF,KAAL,CAAWG,OAAf,EAAwB;AACtBD,MAAAA,aAAa,CAACE,IAAd,CAAmB,YAAnB;AACD;;AACD,WAAO;AACL,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWK,OADf;AAEL,MAAA,SAAS,EAAEH,aAAa,CAACI,IAAd,CAAmB,GAAnB;AAFN,OAEgC,KAAKN,KAAL,CAAWO,KAF3C,CAAP;AAGD;;AAdyC;;;AAgB5CX,MAAM,CAACY,SAAP,GAAmB;AACjBD,EAAAA,KAAK,EAAEE,mBAAUC,MADA;AAEjBC,EAAAA,KAAK,EAAEF,mBAAUC,MAFA;AAGjBE,EAAAA,IAAI,EAAEH,mBAAUC,MAHC;AAIjBG,EAAAA,SAAS,EAAEJ,mBAAUK,IAJJ;AAKjBC,EAAAA,QAAQ,EAAEN,mBAAUK,IALH;AAMjBX,EAAAA,OAAO,EAAEM,mBAAUK,IANF;AAOjBE,EAAAA,OAAO,EAAEP,mBAAUK,IAPF;AAQjBT,EAAAA,OAAO,EAAEI,mBAAUQ;AARF,CAAnB;AAWA;;;;;;AAKO,MAAMC,UAAN,SAAyBrB,eAAMC,SAA/B,CAAyC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMkB,cAAc,GAAG,CAAC,SAAD,CAAvB;;AACA,QAAI,KAAKnB,KAAL,CAAWoB,MAAf,EAAuB;AACrBD,MAAAA,cAAc,CAACf,IAAf,CAAoB,YAApB;AACD;;AACD,QAAI,KAAKJ,KAAL,CAAWqB,KAAX,KAAqB,QAAzB,EAAmC;AACjCF,MAAAA,cAAc,CAACf,IAAf,CAAoB,aAApB;AACD,KAFD,MAEO,IAAI,KAAKJ,KAAL,CAAWqB,KAAX,KAAqB,OAAzB,EAAkC;AACvCF,MAAAA,cAAc,CAACf,IAAf,CAAoB,UAApB;AACD;;AACD,WAAO;AAAK,MAAA,SAAS,EAAEe,cAAc,CAACb,IAAf,CAAoB,GAApB;AAAhB,OACJ,KAAKN,KAAL,CAAWsB,QADP,CAAP;AAGD;;AAlB6C;;;AAoBhDJ,UAAU,CAACV,SAAX,GAAuB;AACrBc,EAAAA,QAAQ,EAAEb,mBAAUc,SAAV,CAAoB,CAC5Bd,mBAAUe,OAAV,CAAkBf,mBAAUgB,IAA5B,CAD4B,EAE5BhB,mBAAUgB,IAFkB,CAApB,CADW;AAKrBL,EAAAA,MAAM,EAAEX,mBAAUK,IALG;AAMrBO,EAAAA,KAAK,EAAEZ,mBAAUC;AANI,CAAvB","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {commonModifiers} from \"./utils\";\n\n// TODO Use Button.List instead of ButtonList\n\n/**\n * Props:\n * - label\n * - color (see bulma.colorToClass()) (default to \"primary\")\n * - size (see bulma.sizeToClass()) (default to \"normal\")\n * - fullwidth\n * - inverted\n * - rounded\n * - loading\n * - onClick\n */\nexport class Button extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const buttonClasses = [\"button\"];\n    commonModifiers(this.props, buttonClasses);\n    if (this.props.rounded) {\n      buttonClasses.push(\"is-rounded\");\n    }\n    return <a \n      onClick={this.props.onClick}\n      className={buttonClasses.join(\" \")}>{this.props.label}</a>;\n  }\n}\nButton.propTypes = {\n  label: PropTypes.string,\n  color: PropTypes.string,\n  size: PropTypes.string,\n  fullwidth: PropTypes.bool,\n  inverted: PropTypes.bool,\n  rounded: PropTypes.bool,\n  loading: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\n/**\n * Props:\n * - joined: attach buttons together\n * - align: either \"left\", \"center\" or \"right\"\n */\nexport class ButtonList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const buttonsClasses = [\"buttons\"];\n    if (this.props.joined) {\n      buttonsClasses.push(\"has-addons\");\n    }\n    if (this.props.align === \"center\") {\n      buttonsClasses.push(\"is-centered\");\n    } else if (this.props.align === \"right\") {\n      buttonsClasses.push(\"is-right\");\n    }\n    return <div className={buttonsClasses.join(\" \")}>\n      {this.props.children}\n    </div>;\n  }\n}\nButtonList.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  joined: PropTypes.bool,\n  align: PropTypes.string,\n};\n"],"file":"button.js"}