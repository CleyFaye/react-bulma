{"version":3,"sources":["../../lib/form/checkbox.mjs"],"names":["Input","ControlledInput","render","classes","props","className","disabled","getStateValue","ev","setStateValue","target","checked","children","propTypes","classNamePropType","PropTypes","bool","allModifiersPropList"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AAGA;;AAGA;;;;AAKA;;;;;;;;;;;;;;AAce,MAAMA,KAAN,SAAoBC,wBAApB,CAAoC;AACjDC,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG,CAAC,UAAD,CAAhB;AACA,4BAASA,OAAT,EAAkB,KAAKC,KAAvB;AACA,WAAO;AACL,MAAA,SAAS,EAAE,wBAAYD,OAAZ,EAAqB,KAAKC,KAAL,CAAWC,SAAhC,CADN;AAEL,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE;AAFhB,OAGL;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,OAAO,EAAE,KAAKC,aAAL,EAFX;AAGE,MAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWE,QAHvB;AAIE,MAAA,QAAQ,EAAEE,EAAE,IAAI,KAAKC,aAAL,CAAmBD,EAAE,CAACE,MAAH,CAAUC,OAA7B;AAJlB,MAHK,EAQJ,KAAKP,KAAL,CAAWQ,QARP,CAAP;AAUD;;AAdgD;;;AAgBnDZ,KAAK,CAACa,SAAN,GAAkB;AAChBR,EAAAA,SAAS,EAAES,wBADK;AAEhBR,EAAAA,QAAQ,EAAES,mBAAUC,IAFJ;AAGhB,KAAGC;AAHa,CAAlB","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ControlledInput from \"./controlledinput\";\nimport {\n  classString,\n} from \"../utils/class\";\nimport {\n  bringAll,\n} from \"../utils/modifier\";\nimport {\n  classNamePropType,\n  allModifiersPropList,\n} from \"../utils/props\";\n\n/**\n * Props:\n * - className\n * - stateName: Name of the property referenced in stateObj.state. If not\n * provided will default to name.\n * - name: HTML name property for the form\n * - stateObj: object with both state and setState to handle updates\n * - disabled\n * - value*: updated using stateObj.state[propName]\n * - onChange: handle change on the input\n * - All Bulma modifiers\n *\n * See form.Input for details on stateObj\n */\nexport default class Input extends ControlledInput {\n  render() {\n    const classes = [\"checkbox\"];\n    bringAll(classes, this.props);\n    return <label\n      className={classString(classes, this.props.className)}\n      disabled={this.props.disabled}>\n      <input\n        type=\"checkbox\"\n        checked={this.getStateValue()}\n        disabled={this.props.disabled}\n        onChange={ev => this.setStateValue(ev.target.checked)} />\n      {this.props.children}\n    </label>;\n  }\n}\nInput.propTypes = {\n  className: classNamePropType,\n  disabled: PropTypes.bool,\n  ...allModifiersPropList,\n};"],"file":"checkbox.js"}