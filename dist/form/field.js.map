{"version":3,"sources":["../../lib/form/field.mjs"],"names":["Field","React","Component","_addPosition","classes","bundleType","props","position","push","_renderChildren","size","render","horizontal","group","multiline","addons","helpElement","help","undefined","className","propTypes","classNamePropType","children","PropTypes","node","string","bool","oneOf","allModifiersPropList","Label","Body"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  classString,\n} from \"../utils/class\";\nimport {\n  bringAll,\n} from \"../utils/modifier\";\nimport {\n  classNamePropType,\n  allModifiersPropList,\n} from \"../utils/props\";\nimport {\n  renderChildrenWithProps,\n} from \"../utils/children\";\n\n/**\n * Props:\n * - className\n * - help(string): help text\n * - addons(bool): link together multiple controls (input/dropdown/button)\n * - group(bool): group controls together. Predates addons.\n * - multiline(bool): if group should span on multiple lines\n * - position(\"left\", \"center\", \"right\"): addons/group bundle position (default\n * to left)\n * - horizontal(bool): display label and control on the same line\n * - All bulma modifiers\n * \n * @note\n * Using horizontal field require wrapping the label and content respectively\n * in Field.Label and Field.Body\n */\nexport default class Field extends React.Component {\n  /** Add the position class for the specified bundle type */\n  _addPosition(classes, bundleType) {\n    switch (this.props.position) {\n    case \"center\": classes.push(`has-${bundleType}-centered`); break;\n    case \"right\": classes.push(`has-${bundleType}-right`); break;\n    }\n  }\n\n  _renderChildren() {\n    return renderChildrenWithProps(\n      this.props, \n      {\n        size: true,\n      });\n  }\n\n  render() {\n    const classes = [\"field\"];\n    bringAll(classes, this.props);\n    if (this.props.horizontal) {\n      classes.push(\"is-horizontal\");\n    }\n    if (this.props.group) {\n      classes.push(\"is-grouped\");\n      this._addPosition(classes, \"grouped\");\n      if (this.props.multiline) {\n        classes.push(\"is-grouped-multiline\");\n      }\n    } else if (this.props.addons) {\n      classes.push(\"has-addons\");\n      this._addPosition(classes, \"addons\");\n    }\n    const helpElement = this.props.help\n      ? <p className=\"help\">{this.props.help}</p>\n      : undefined;\n    return <div className={classString(classes, this.props.className)}>\n      {this._renderChildren()}\n      {helpElement}\n    </div>;\n  }\n}\nField.propTypes = {\n  className: classNamePropType,\n  children: PropTypes.node,\n  help: PropTypes.string,\n  addons: PropTypes.bool,\n  group:PropTypes.bool,\n  horizontal: PropTypes.bool,\n  multiline: PropTypes.bool,\n  position: PropTypes.oneOf([\"left\", \"center\", \"right\"]),\n  ...allModifiersPropList,\n};\n\n/**\n * Props:\n * - className\n * - All Bulma modifiers\n */\nclass Label extends React.Component {\n  _renderChildren() {\n    return renderChildrenWithProps(\n      this.props, \n      {\n        size: true,\n      });\n  }\n\n  render() {\n    const classes = [\"field-label\"];\n    bringAll(classes, this.props);\n    return <div className={classString(classes, this.props.className)}>\n      {this._renderChildren()}\n    </div>;\n  }\n}\nLabel.propTypes = {\n  className: classNamePropType,\n  children: PropTypes.node,\n  ...allModifiersPropList,\n};\nField.Label = Label;\n\n/**\n * Props:\n * - className\n * - All Bulma modifiers\n */\nclass Body extends React.Component {\n  _renderChildren() {\n    return renderChildrenWithProps(\n      this.props, \n      {\n        size: true,\n      });\n  }\n\n  render() {\n    const classes = [\"field-body\"];\n    bringAll(classes, this.props);\n    return <div className={classString(classes, this.props.className)}>\n      <Field>\n        {this._renderChildren()}\n      </Field>\n    </div>;\n  }\n}\nBody.propTypes = {\n  className: classNamePropType,\n  children: PropTypes.node,\n  ...allModifiersPropList,\n};\nField.Body = Body;"],"file":"field.js"}