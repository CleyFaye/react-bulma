{"version":3,"sources":["../../lib/form/controlledinput.mjs"],"names":["ControlledInput","React","Component","_getStateName","props","stateName","name","getStateValue","stateObj","value","setStateValue","setState","onChange","getReadOnly","readonly","readOnly","loading","propTypes","PropTypes","func","string","object","any","bool"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA;;;;;;;;;;AAUe,MAAMA,eAAN,SAA8BC,eAAMC,SAApC,CAA8C;AAC3DC,EAAAA,aAAa,GAAG;AACd,QAAI,KAAKC,KAAL,CAAWC,SAAf,EAA0B;AACxB,aAAO,KAAKD,KAAL,CAAWC,SAAlB;AACD;;AACD,WAAO,KAAKD,KAAL,CAAWE,IAAlB;AACD;;AAEDC,EAAAA,aAAa,GAAG;AACd,QAAI,KAAKC,QAAT,EAAmB;AACjB,aAAO,KAAKA,QAAL,CAAc,KAAKL,aAAL,EAAd,CAAP;AACD;;AACD,WAAO,KAAKC,KAAL,CAAWK,KAAlB;AACD;;AAEDC,EAAAA,aAAa,CAACD,KAAD,EAAQ;AACnB,QAAI,KAAKD,QAAT,EAAmB;AACjB,WAAKA,QAAL,CAAcG,QAAd,CAAuB;AAAC,SAAC,KAAKR,aAAL,EAAD,GAAwBM;AAAzB,OAAvB;AACD;;AACD,QAAI,KAAKL,KAAL,CAAWQ,QAAf,EAAyB;AACvB,WAAKR,KAAL,CAAWQ,QAAX,CAAoBH,KAApB;AACD;AACF;;AAEDI,EAAAA,WAAW,GAAG;AACZ,QAAI,KAAKL,QAAT,EAAmB;AACjB,aAAO,KAAKA,QAAL,CAAcM,QAAd,IAA0B,KAAKV,KAAL,CAAWW,QAArC,IACF,KAAKP,QAAL,CAAcQ,OADnB;AAED;;AACD,WAAO,KAAKZ,KAAL,CAAWW,QAAlB;AACD;;AA9B0D;;;AAgC7Df,eAAe,CAACiB,SAAhB,GAA4B;AAC1BL,EAAAA,QAAQ,EAAEM,mBAAUC,IADM;AAE1Bd,EAAAA,SAAS,EAAEa,mBAAUE,MAFK;AAG1Bd,EAAAA,IAAI,EAAEY,mBAAUE,MAHU;AAI1BZ,EAAAA,QAAQ,EAAEU,mBAAUG,MAJM;AAK1BZ,EAAAA,KAAK,EAAES,mBAAUI,GALS;AAM1BP,EAAAA,QAAQ,EAAEG,mBAAUK;AANM,CAA5B","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/** A base for all component that have their value controlled somewhere else.\n * \n * Props:\n * - stateName: default to name\n * - name\n * - stateObj\n * - onChange\n * - value\n * - readOnly\n */\nexport default class ControlledInput extends React.Component {\n  _getStateName() {\n    if (this.props.stateName) {\n      return this.props.stateName;\n    }\n    return this.props.name;\n  }\n\n  getStateValue() {\n    if (this.stateObj) {\n      return this.stateObj[this._getStateName()];\n    }\n    return this.props.value;\n  }\n\n  setStateValue(value) {\n    if (this.stateObj) {\n      this.stateObj.setState({[this._getStateName()]: value});\n    }\n    if (this.props.onChange) {\n      this.props.onChange(value);\n    }\n  }\n\n  getReadOnly() {\n    if (this.stateObj) {\n      return this.stateObj.readonly || this.props.readOnly\n        || this.stateObj.loading;\n    }\n    return this.props.readOnly;\n  }\n}\nControlledInput.propTypes = {\n  onChange: PropTypes.func,\n  stateName: PropTypes.string,\n  name: PropTypes.string,\n  stateObj: PropTypes.object,\n  value: PropTypes.any,\n  readOnly: PropTypes.bool,\n};"],"file":"controlledinput.js"}